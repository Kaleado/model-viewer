<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="CMakeRunConfigurationManager" shouldGenerate="true" shouldDeleteObsolete="true" buildAllGenerated="true">
    <generated>
      <config projectName="ogl-renderer" targetName="reopen" />
      <config projectName="ogl-renderer" targetName="iconify" />
      <config projectName="ogl-renderer" targetName="NightlyStart" />
      <config projectName="ogl-renderer" targetName="ContinuousMemCheck" />
      <config projectName="ogl-renderer" targetName="ContinuousTest" />
      <config projectName="ogl-renderer" targetName="NightlyMemoryCheck" />
      <config projectName="ogl-renderer" targetName="uninstall" />
      <config projectName="ogl-renderer" targetName="ContinuousSubmit" />
      <config projectName="ogl-renderer" targetName="cursor" />
      <config projectName="ogl-renderer" targetName="wave" />
      <config projectName="ogl-renderer" targetName="glfwinfo" />
      <config projectName="ogl-renderer" targetName="NightlyMemCheck" />
      <config projectName="ogl-renderer" targetName="title" />
      <config projectName="ogl-renderer" targetName="ContinuousUpdate" />
      <config projectName="ogl-renderer" targetName="NightlyBuild" />
      <config projectName="ogl-renderer" targetName="ExperimentalStart" />
      <config projectName="ogl-renderer" targetName="splitview" />
      <config projectName="ogl-renderer" targetName="glfw" />
      <config projectName="ogl-renderer" targetName="BulletCollision" />
      <config projectName="ogl-renderer" targetName="ExperimentalSubmit" />
      <config projectName="ogl-renderer" targetName="ExperimentalMemCheck" />
      <config projectName="ogl-renderer" targetName="assimp" />
      <config projectName="ogl-renderer" targetName="LinearMath" />
      <config projectName="ogl-renderer" targetName="NightlySubmit" />
      <config projectName="ogl-renderer" targetName="Nightly" />
      <config projectName="ogl-renderer" targetName="joysticks" />
      <config projectName="ogl-renderer" targetName="ContinuousStart" />
      <config projectName="ogl-renderer" targetName="Experimental" />
      <config projectName="ogl-renderer" targetName="ExperimentalBuild" />
      <config projectName="ogl-renderer" targetName="ExperimentalConfigure" />
      <config projectName="ogl-renderer" targetName="ExperimentalTest" />
      <config projectName="ogl-renderer" targetName="sharing" />
      <config projectName="ogl-renderer" targetName="monitors" />
      <config projectName="ogl-renderer" targetName="gears" />
      <config projectName="ogl-renderer" targetName="ContinuousCoverage" />
      <config projectName="ogl-renderer" targetName="clipboard" />
      <config projectName="ogl-renderer" targetName="ANTTWEAKBAR_116_OGLCORE_GLFW" />
      <config projectName="ogl-renderer" targetName="NightlyTest" />
      <config projectName="ogl-renderer" targetName="NightlyCoverage" />
      <config projectName="ogl-renderer" targetName="BulletDynamics" />
      <config projectName="ogl-renderer" targetName="particles" />
      <config projectName="ogl-renderer" targetName="threads" />
      <config projectName="ogl-renderer" targetName="simple" />
      <config projectName="ogl-renderer" targetName="docs" />
      <config projectName="ogl-renderer" targetName="heightmap" />
      <config projectName="ogl-renderer" targetName="BulletSoftBody" />
      <config projectName="ogl-renderer" targetName="events" />
      <config projectName="ogl-renderer" targetName="ContinuousConfigure" />
      <config projectName="ogl-renderer" targetName="zlib" />
      <config projectName="ogl-renderer" targetName="windows" />
      <config projectName="ogl-renderer" targetName="ogl-renderer" />
      <config projectName="ogl-renderer" targetName="ExperimentalUpdate" />
      <config projectName="ogl-renderer" targetName="empty" />
      <config projectName="ogl-renderer" targetName="gamma" />
      <config projectName="ogl-renderer" targetName="ContinuousBuild" />
      <config projectName="ogl-renderer" targetName="tearing" />
      <config projectName="ogl-renderer" targetName="Continuous" />
      <config projectName="ogl-renderer" targetName="msaa" />
      <config projectName="ogl-renderer" targetName="NightlyConfigure" />
      <config projectName="ogl-renderer" targetName="GLEW_1130" />
      <config projectName="ogl-renderer" targetName="boing" />
      <config projectName="ogl-renderer" targetName="ExperimentalCoverage" />
      <config projectName="ogl-renderer" targetName="NightlyUpdate" />
    </generated>
  </component>
  <component name="CMakeSettings" AUTO_RELOAD="true">
    <configurations>
      <configuration PROFILE_NAME="Debug" CONFIG_NAME="Debug" />
    </configurations>
  </component>
  <component name="ChangeListManager">
    <list default="true" id="30ae3252-58d3-4d8f-adc7-bec22ba2658d" name="Default Changelist" comment="" />
    <ignored path="$PROJECT_DIR$/cmake-build-debug/" />
    <option name="EXCLUDED_CONVERTED_TO_IGNORED" value="true" />
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="ExecutionTargetManager" SELECTED_TARGET="CMakeBuildProfile:Debug" />
  <component name="FUSProjectUsageTrigger">
    <session id="1291302658">
      <usages-collector id="statistics.lifecycle.project">
        <counts>
          <entry key="project.open.time.34" value="1" />
          <entry key="project.open.time.41" value="1" />
          <entry key="project.open.time.7" value="1" />
          <entry key="project.opened" value="3" />
        </counts>
      </usages-collector>
      <usages-collector id="statistics.file.extensions.open">
        <counts>
          <entry key="c" value="1" />
          <entry key="cpp" value="5" />
          <entry key="h" value="1" />
          <entry key="hpp" value="6" />
          <entry key="json" value="1" />
          <entry key="txt" value="2" />
        </counts>
      </usages-collector>
      <usages-collector id="statistics.file.types.open">
        <counts>
          <entry key="CMakeLists.txt" value="2" />
          <entry key="JSON" value="1" />
          <entry key="ObjectiveC" value="13" />
        </counts>
      </usages-collector>
      <usages-collector id="statistics.file.extensions.edit">
        <counts>
          <entry key="cpp" value="811" />
          <entry key="hpp" value="277" />
          <entry key="json" value="169" />
          <entry key="txt" value="342" />
        </counts>
      </usages-collector>
      <usages-collector id="statistics.file.types.edit">
        <counts>
          <entry key="CMakeLists.txt" value="342" />
          <entry key="JSON" value="169" />
          <entry key="ObjectiveC" value="1088" />
        </counts>
      </usages-collector>
    </session>
  </component>
  <component name="FileEditorManager">
    <leaf SIDE_TABS_SIZE_LIMIT_KEY="300">
      <file pinned="false" current-in-tab="false">
        <entry file="file://$PROJECT_DIR$/ogl-renderer/main.cpp">
          <provider selected="true" editor-type-id="text-editor">
            <state relative-caret-position="616">
              <caret line="44" column="45" selection-start-line="44" selection-start-column="45" selection-end-line="44" selection-end-column="45" />
              <folding>
                <element signature="e#182#204#0" expanded="true" />
                <element signature="e#301#328#0" expanded="true" />
              </folding>
            </state>
          </provider>
        </entry>
      </file>
      <file pinned="false" current-in-tab="false">
        <entry file="file://$PROJECT_DIR$/ogl-renderer/SceneTree.hpp">
          <provider selected="true" editor-type-id="text-editor">
            <state relative-caret-position="364">
              <caret line="26" column="16" selection-start-line="26" selection-start-column="16" selection-end-line="26" selection-end-column="16" />
            </state>
          </provider>
        </entry>
      </file>
      <file pinned="false" current-in-tab="false">
        <entry file="file://$PROJECT_DIR$/ogl-renderer/Thing.cpp">
          <provider selected="true" editor-type-id="text-editor">
            <state relative-caret-position="392">
              <caret line="28" column="20" selection-start-line="28" selection-start-column="20" selection-end-line="28" selection-end-column="20" />
            </state>
          </provider>
        </entry>
      </file>
      <file pinned="false" current-in-tab="false">
        <entry file="file://$PROJECT_DIR$/ogl-renderer/Thing.hpp">
          <provider selected="true" editor-type-id="text-editor">
            <state relative-caret-position="364">
              <caret line="26" column="4" selection-start-line="26" selection-start-column="4" selection-end-line="26" selection-end-column="4" />
            </state>
          </provider>
        </entry>
      </file>
      <file pinned="false" current-in-tab="false">
        <entry file="file://$PROJECT_DIR$/ogl-renderer/SceneTree.cpp">
          <provider selected="true" editor-type-id="text-editor">
            <state relative-caret-position="112">
              <caret line="8" column="49" selection-start-line="8" selection-start-column="49" selection-end-line="8" selection-end-column="49" />
            </state>
          </provider>
        </entry>
      </file>
      <file pinned="false" current-in-tab="true">
        <entry file="file://$PROJECT_DIR$/ogl-renderer/TriangleMesh.hpp">
          <provider selected="true" editor-type-id="text-editor">
            <state relative-caret-position="308">
              <caret line="46" column="44" lean-forward="true" selection-start-line="46" selection-start-column="44" selection-end-line="46" selection-end-column="44" />
              <folding>
                <element signature="e#205#227#0" expanded="true" />
                <element signature="e#324#345#0" expanded="true" />
              </folding>
            </state>
          </provider>
        </entry>
      </file>
      <file pinned="false" current-in-tab="false">
        <entry file="file://$PROJECT_DIR$/ogl-renderer/Shader.hpp">
          <provider selected="true" editor-type-id="text-editor">
            <state relative-caret-position="280">
              <caret line="20" selection-start-line="20" selection-end-line="20" />
              <folding>
                <element signature="e#100#122#0" expanded="true" />
              </folding>
            </state>
          </provider>
        </entry>
      </file>
      <file pinned="false" current-in-tab="false">
        <entry file="file://$PROJECT_DIR$/CMakeLists.txt">
          <provider selected="true" editor-type-id="text-editor">
            <state relative-caret-position="840">
              <caret line="60" column="32" selection-start-line="60" selection-start-column="32" selection-end-line="60" selection-end-column="32" />
            </state>
          </provider>
        </entry>
      </file>
    </leaf>
  </component>
  <component name="FindInProjectRecents">
    <findStrings>
      <find>master</find>
      <find>tutorial</find>
      <find>first</find>
      <find>distrib</find>
      <find>shader</find>
      <find>draw</find>
      <find>addchi</find>
      <find>scene</find>
      <find>window</find>
      <find>view</find>
      <find>camera</find>
      <find>callbak</find>
      <find>triangle</find>
      <find>librar</find>
      <find>all_libs</find>
      <find>find_</find>
      <find>all_li</find>
    </findStrings>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$/nlohmann-json" />
  </component>
  <component name="IdeDocumentHistory">
    <option name="CHANGED_PATHS">
      <list>
        <option value="$PROJECT_DIR$/ogl-renderer/Util.hpp" />
        <option value="$PROJECT_DIR$/ogl-renderer/Shader.hpp" />
        <option value="$PROJECT_DIR$/ogl-renderer/TriangleMesh.hpp" />
        <option value="$PROJECT_DIR$/ogl-renderer/SceneTree.hpp" />
        <option value="$PROJECT_DIR$/ogl-renderer/SceneTree.cpp" />
        <option value="$PROJECT_DIR$/ogl-renderer/Thing.hpp" />
        <option value="$PROJECT_DIR$/ogl-renderer/Thing.cpp" />
        <option value="$PROJECT_DIR$/ogl-renderer/resources/exampleObject.json" />
        <option value="$PROJECT_DIR$/ogl-renderer/main.cpp" />
        <option value="$PROJECT_DIR$/ogl-renderer/TriangleMesh.cpp" />
        <option value="$PROJECT_DIR$/CMakeLists.txt" />
        <option value="$PROJECT_DIR$/ogl-renderer/HeightmapMesh.hpp" />
        <option value="$PROJECT_DIR$/ogl-renderer/HeightmapMesh.cpp" />
      </list>
    </option>
  </component>
  <component name="JsBuildToolGruntFileManager" detection-done="true" sorting="DEFINITION_ORDER" />
  <component name="JsBuildToolPackageJson" detection-done="true" sorting="DEFINITION_ORDER" />
  <component name="JsGulpfileManager">
    <detection-done>true</detection-done>
    <sorting>DEFINITION_ORDER</sorting>
  </component>
  <component name="ProjectFrameBounds" extendedState="6">
    <option name="y" value="-30" />
    <option name="width" value="1920" />
    <option name="height" value="1110" />
  </component>
  <component name="ProjectLevelVcsManager" settingsEditedManually="true" />
  <component name="ProjectView">
    <navigator proportions="" version="1">
      <foldersAlwaysOnTop value="true" />
    </navigator>
    <panes>
      <pane id="ProjectPane">
        <subPane>
          <expand>
            <path>
              <item name="ogl-renderer" type="b2602c69:ProjectViewProjectNode" />
              <item name="ogl-master" type="462c0819:PsiDirectoryNode" />
            </path>
            <path>
              <item name="ogl-renderer" type="b2602c69:ProjectViewProjectNode" />
              <item name="ogl-master" type="462c0819:PsiDirectoryNode" />
              <item name="ogl-renderer" type="462c0819:PsiDirectoryNode" />
            </path>
            <path>
              <item name="ogl-renderer" type="b2602c69:ProjectViewProjectNode" />
              <item name="ogl-master" type="462c0819:PsiDirectoryNode" />
              <item name="ogl-renderer" type="462c0819:PsiDirectoryNode" />
              <item name="resources" type="462c0819:PsiDirectoryNode" />
            </path>
          </expand>
          <select />
        </subPane>
      </pane>
      <pane id="Scope" />
    </panes>
  </component>
  <component name="PropertiesComponent">
    <property name="WebServerToolWindowFactoryState" value="false" />
    <property name="last_opened_file_path" value="$PROJECT_DIR$" />
    <property name="nodejs_interpreter_path.stuck_in_default_project" value="undefined stuck path" />
    <property name="nodejs_npm_path_reset_for_default_project" value="true" />
  </component>
  <component name="RunDashboard">
    <option name="ruleStates">
      <list>
        <RuleState>
          <option name="name" value="ConfigurationTypeDashboardGroupingRule" />
        </RuleState>
        <RuleState>
          <option name="name" value="StatusDashboardGroupingRule" />
        </RuleState>
      </list>
    </option>
  </component>
  <component name="RunManager" selected="Application.ogl-renderer">
    <configuration name="ANTTWEAKBAR_116_OGLCORE_GLFW" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ogl-renderer" TARGET_NAME="ANTTWEAKBAR_116_OGLCORE_GLFW" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="Build All" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" CONFIG_NAME="Debug" EXPLICIT_BUILD_TARGET_NAME="all">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="BulletCollision" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ogl-renderer" TARGET_NAME="BulletCollision" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="BulletDynamics" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ogl-renderer" TARGET_NAME="BulletDynamics" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="BulletSoftBody" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ogl-renderer" TARGET_NAME="BulletSoftBody" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="Continuous" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ogl-renderer" TARGET_NAME="Continuous" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="ContinuousBuild" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ogl-renderer" TARGET_NAME="ContinuousBuild" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="ogl-renderer" RUN_TARGET_NAME="ContinuousBuild">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="ContinuousConfigure" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ogl-renderer" TARGET_NAME="ContinuousConfigure" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="ogl-renderer" RUN_TARGET_NAME="ContinuousConfigure">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="ContinuousCoverage" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ogl-renderer" TARGET_NAME="ContinuousCoverage" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="ogl-renderer" RUN_TARGET_NAME="ContinuousCoverage">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="ContinuousMemCheck" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ogl-renderer" TARGET_NAME="ContinuousMemCheck" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="ogl-renderer" RUN_TARGET_NAME="ContinuousMemCheck">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="ContinuousStart" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ogl-renderer" TARGET_NAME="ContinuousStart" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="ogl-renderer" RUN_TARGET_NAME="ContinuousStart">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="ContinuousSubmit" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ogl-renderer" TARGET_NAME="ContinuousSubmit" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="ogl-renderer" RUN_TARGET_NAME="ContinuousSubmit">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="ContinuousTest" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ogl-renderer" TARGET_NAME="ContinuousTest" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="ogl-renderer" RUN_TARGET_NAME="ContinuousTest">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="ContinuousUpdate" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ogl-renderer" TARGET_NAME="ContinuousUpdate" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="ogl-renderer" RUN_TARGET_NAME="ContinuousUpdate">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="Experimental" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ogl-renderer" TARGET_NAME="Experimental" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="ExperimentalBuild" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ogl-renderer" TARGET_NAME="ExperimentalBuild" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="ogl-renderer" RUN_TARGET_NAME="ExperimentalBuild">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="ExperimentalConfigure" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ogl-renderer" TARGET_NAME="ExperimentalConfigure" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="ogl-renderer" RUN_TARGET_NAME="ExperimentalConfigure">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="ExperimentalCoverage" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ogl-renderer" TARGET_NAME="ExperimentalCoverage" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="ogl-renderer" RUN_TARGET_NAME="ExperimentalCoverage">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="ExperimentalMemCheck" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ogl-renderer" TARGET_NAME="ExperimentalMemCheck" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="ogl-renderer" RUN_TARGET_NAME="ExperimentalMemCheck">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="ExperimentalStart" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ogl-renderer" TARGET_NAME="ExperimentalStart" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="ogl-renderer" RUN_TARGET_NAME="ExperimentalStart">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="ExperimentalSubmit" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ogl-renderer" TARGET_NAME="ExperimentalSubmit" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="ogl-renderer" RUN_TARGET_NAME="ExperimentalSubmit">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="ExperimentalTest" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ogl-renderer" TARGET_NAME="ExperimentalTest" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="ogl-renderer" RUN_TARGET_NAME="ExperimentalTest">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="ExperimentalUpdate" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ogl-renderer" TARGET_NAME="ExperimentalUpdate" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="ogl-renderer" RUN_TARGET_NAME="ExperimentalUpdate">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="GLEW_1130" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ogl-renderer" TARGET_NAME="GLEW_1130" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LinearMath" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ogl-renderer" TARGET_NAME="LinearMath" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="Nightly" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ogl-renderer" TARGET_NAME="Nightly" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="NightlyBuild" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ogl-renderer" TARGET_NAME="NightlyBuild" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="ogl-renderer" RUN_TARGET_NAME="NightlyBuild">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="NightlyConfigure" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ogl-renderer" TARGET_NAME="NightlyConfigure" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="ogl-renderer" RUN_TARGET_NAME="NightlyConfigure">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="NightlyCoverage" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ogl-renderer" TARGET_NAME="NightlyCoverage" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="ogl-renderer" RUN_TARGET_NAME="NightlyCoverage">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="NightlyMemCheck" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ogl-renderer" TARGET_NAME="NightlyMemCheck" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="ogl-renderer" RUN_TARGET_NAME="NightlyMemCheck">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="NightlyMemoryCheck" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ogl-renderer" TARGET_NAME="NightlyMemoryCheck" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="ogl-renderer" RUN_TARGET_NAME="NightlyMemoryCheck">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="NightlyStart" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ogl-renderer" TARGET_NAME="NightlyStart" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="ogl-renderer" RUN_TARGET_NAME="NightlyStart">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="NightlySubmit" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ogl-renderer" TARGET_NAME="NightlySubmit" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="ogl-renderer" RUN_TARGET_NAME="NightlySubmit">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="NightlyTest" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ogl-renderer" TARGET_NAME="NightlyTest" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="ogl-renderer" RUN_TARGET_NAME="NightlyTest">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="NightlyUpdate" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ogl-renderer" TARGET_NAME="NightlyUpdate" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="ogl-renderer" RUN_TARGET_NAME="NightlyUpdate">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="assimp" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ogl-renderer" TARGET_NAME="assimp" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="boing" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ogl-renderer" TARGET_NAME="boing" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="ogl-renderer" RUN_TARGET_NAME="boing">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="clipboard" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ogl-renderer" TARGET_NAME="clipboard" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="ogl-renderer" RUN_TARGET_NAME="clipboard">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="cursor" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ogl-renderer" TARGET_NAME="cursor" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="ogl-renderer" RUN_TARGET_NAME="cursor">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="docs" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ogl-renderer" TARGET_NAME="docs" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="empty" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ogl-renderer" TARGET_NAME="empty" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="ogl-renderer" RUN_TARGET_NAME="empty">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="events" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ogl-renderer" TARGET_NAME="events" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="ogl-renderer" RUN_TARGET_NAME="events">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="gamma" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ogl-renderer" TARGET_NAME="gamma" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="ogl-renderer" RUN_TARGET_NAME="gamma">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="gears" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ogl-renderer" TARGET_NAME="gears" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="ogl-renderer" RUN_TARGET_NAME="gears">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="glfw" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ogl-renderer" TARGET_NAME="glfw" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="glfwinfo" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ogl-renderer" TARGET_NAME="glfwinfo" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="ogl-renderer" RUN_TARGET_NAME="glfwinfo">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="heightmap" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ogl-renderer" TARGET_NAME="heightmap" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="ogl-renderer" RUN_TARGET_NAME="heightmap">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="iconify" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ogl-renderer" TARGET_NAME="iconify" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="ogl-renderer" RUN_TARGET_NAME="iconify">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="joysticks" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ogl-renderer" TARGET_NAME="joysticks" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="ogl-renderer" RUN_TARGET_NAME="joysticks">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="monitors" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ogl-renderer" TARGET_NAME="monitors" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="ogl-renderer" RUN_TARGET_NAME="monitors">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="msaa" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ogl-renderer" TARGET_NAME="msaa" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="ogl-renderer" RUN_TARGET_NAME="msaa">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="ogl-renderer" type="CMakeRunConfiguration" factoryName="Application" WORKING_DIR="file://$PROJECT_DIR$/ogl-renderer" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ogl-renderer" TARGET_NAME="ogl-renderer" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="ogl-renderer" RUN_TARGET_NAME="ogl-renderer">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="particles" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ogl-renderer" TARGET_NAME="particles" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="ogl-renderer" RUN_TARGET_NAME="particles">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="reopen" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ogl-renderer" TARGET_NAME="reopen" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="ogl-renderer" RUN_TARGET_NAME="reopen">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="sharing" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ogl-renderer" TARGET_NAME="sharing" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="ogl-renderer" RUN_TARGET_NAME="sharing">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="simple" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ogl-renderer" TARGET_NAME="simple" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="ogl-renderer" RUN_TARGET_NAME="simple">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="splitview" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ogl-renderer" TARGET_NAME="splitview" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="ogl-renderer" RUN_TARGET_NAME="splitview">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="tearing" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ogl-renderer" TARGET_NAME="tearing" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="ogl-renderer" RUN_TARGET_NAME="tearing">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="threads" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ogl-renderer" TARGET_NAME="threads" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="ogl-renderer" RUN_TARGET_NAME="threads">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="title" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ogl-renderer" TARGET_NAME="title" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="ogl-renderer" RUN_TARGET_NAME="title">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="uninstall" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ogl-renderer" TARGET_NAME="uninstall" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="wave" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ogl-renderer" TARGET_NAME="wave" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="ogl-renderer" RUN_TARGET_NAME="wave">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="windows" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ogl-renderer" TARGET_NAME="windows" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="ogl-renderer" RUN_TARGET_NAME="windows">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="zlib" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="ogl-renderer" TARGET_NAME="zlib" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <list>
      <item itemvalue="Application.Build All" />
      <item itemvalue="Application.ogl-renderer" />
      <item itemvalue="Application.ANTTWEAKBAR_116_OGLCORE_GLFW" />
      <item itemvalue="Application.GLEW_1130" />
      <item itemvalue="Application.assimp" />
      <item itemvalue="Application.zlib" />
      <item itemvalue="Application.BulletCollision" />
      <item itemvalue="Application.BulletDynamics" />
      <item itemvalue="Application.BulletSoftBody" />
      <item itemvalue="Application.LinearMath" />
      <item itemvalue="Application.uninstall" />
      <item itemvalue="Application.docs" />
      <item itemvalue="Application.boing" />
      <item itemvalue="Application.gears" />
      <item itemvalue="Application.heightmap" />
      <item itemvalue="Application.particles" />
      <item itemvalue="Application.simple" />
      <item itemvalue="Application.splitview" />
      <item itemvalue="Application.wave" />
      <item itemvalue="Application.glfw" />
      <item itemvalue="Application.clipboard" />
      <item itemvalue="Application.cursor" />
      <item itemvalue="Application.empty" />
      <item itemvalue="Application.events" />
      <item itemvalue="Application.gamma" />
      <item itemvalue="Application.glfwinfo" />
      <item itemvalue="Application.iconify" />
      <item itemvalue="Application.joysticks" />
      <item itemvalue="Application.monitors" />
      <item itemvalue="Application.msaa" />
      <item itemvalue="Application.reopen" />
      <item itemvalue="Application.sharing" />
      <item itemvalue="Application.tearing" />
      <item itemvalue="Application.threads" />
      <item itemvalue="Application.title" />
      <item itemvalue="Application.windows" />
      <item itemvalue="Application.Continuous" />
      <item itemvalue="Application.ContinuousBuild" />
      <item itemvalue="Application.ContinuousConfigure" />
      <item itemvalue="Application.ContinuousCoverage" />
      <item itemvalue="Application.ContinuousMemCheck" />
      <item itemvalue="Application.ContinuousStart" />
      <item itemvalue="Application.ContinuousSubmit" />
      <item itemvalue="Application.ContinuousTest" />
      <item itemvalue="Application.ContinuousUpdate" />
      <item itemvalue="Application.Experimental" />
      <item itemvalue="Application.ExperimentalBuild" />
      <item itemvalue="Application.ExperimentalConfigure" />
      <item itemvalue="Application.ExperimentalCoverage" />
      <item itemvalue="Application.ExperimentalMemCheck" />
      <item itemvalue="Application.ExperimentalStart" />
      <item itemvalue="Application.ExperimentalSubmit" />
      <item itemvalue="Application.ExperimentalTest" />
      <item itemvalue="Application.ExperimentalUpdate" />
      <item itemvalue="Application.Nightly" />
      <item itemvalue="Application.NightlyBuild" />
      <item itemvalue="Application.NightlyConfigure" />
      <item itemvalue="Application.NightlyCoverage" />
      <item itemvalue="Application.NightlyMemCheck" />
      <item itemvalue="Application.NightlyMemoryCheck" />
      <item itemvalue="Application.NightlyStart" />
      <item itemvalue="Application.NightlySubmit" />
      <item itemvalue="Application.NightlyTest" />
      <item itemvalue="Application.NightlyUpdate" />
    </list>
  </component>
  <component name="SvnConfiguration">
    <configuration />
  </component>
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="30ae3252-58d3-4d8f-adc7-bec22ba2658d" name="Default Changelist" comment="" />
      <created>1546916670144</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1546916670144</updated>
      <workItem from="1546916674801" duration="12790000" />
      <workItem from="1547118526820" duration="1800000" />
      <workItem from="1548054147338" duration="918000" />
    </task>
    <servers />
  </component>
  <component name="TimeTrackingManager">
    <option name="totallyTimeSpent" value="15508000" />
  </component>
  <component name="ToolWindowManager">
    <frame x="51" y="25" width="1869" height="1055" extended-state="6" />
    <editor active="true" />
    <layout>
      <window_info content_ui="combo" id="Project" order="0" visible="true" weight="0.2035107" />
      <window_info id="Structure" order="1" side_tool="true" weight="0.25" />
      <window_info id="Favorites" order="2" side_tool="true" />
      <window_info anchor="bottom" id="Message" order="0" />
      <window_info anchor="bottom" id="Find" order="1" weight="0.32914045" />
      <window_info active="true" anchor="bottom" id="Run" order="2" visible="true" weight="0.33837837" />
      <window_info anchor="bottom" id="Debug" order="3" weight="0.4" />
      <window_info anchor="bottom" id="Cvs" order="4" weight="0.25" />
      <window_info anchor="bottom" id="Inspection" order="5" weight="0.4" />
      <window_info anchor="bottom" id="TODO" order="6" />
      <window_info anchor="bottom" id="Database Changes" order="7" show_stripe_button="false" />
      <window_info anchor="bottom" id="Messages" order="8" weight="0.32864866" />
      <window_info anchor="bottom" id="Terminal" order="9" weight="0.32914045" />
      <window_info anchor="bottom" id="Event Log" order="10" side_tool="true" />
      <window_info anchor="bottom" id="Version Control" order="11" show_stripe_button="false" />
      <window_info anchor="bottom" id="CMake" order="12" weight="0.32972974" />
      <window_info anchor="right" id="Commander" internal_type="SLIDING" order="0" type="SLIDING" weight="0.4" />
      <window_info anchor="right" id="Ant Build" order="1" weight="0.25" />
      <window_info anchor="right" content_ui="combo" id="Hierarchy" order="2" weight="0.25" />
      <window_info anchor="right" id="LuaJ" order="3" />
      <window_info anchor="right" id="Database" order="4" />
    </layout>
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="1" />
  </component>
  <component name="VcsContentAnnotationSettings">
    <option name="myLimit" value="2678400000" />
  </component>
  <component name="editorHistoryManager">
    <entry file="file://$PROJECT_DIR$/ogl-renderer/Util.hpp">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="224">
          <caret line="17" column="22" selection-start-line="17" selection-start-column="22" selection-end-line="17" selection-end-column="22" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/external/glfw-3.1.2/include/GLFW/glfw3.h">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="533">
          <caret line="932" column="14" lean-forward="true" selection-start-line="932" selection-start-column="14" selection-end-line="932" selection-end-column="14" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/external/glfw-3.1.2/src/input.c">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="309">
          <caret line="457" column="60" selection-start-line="457" selection-start-column="60" selection-end-line="457" selection-end-column="60" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/ogl-renderer/resources/exampleObject.json" />
    <entry file="file://$PROJECT_DIR$/ogl-renderer/TriangleMesh.cpp">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="376">
          <caret line="50" column="30" selection-start-line="50" selection-start-column="30" selection-end-line="50" selection-end-column="30" />
          <folding>
            <element signature="e#41#59#0" expanded="true" />
          </folding>
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/ogl-renderer/main.cpp">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="616">
          <caret line="44" column="45" selection-start-line="44" selection-start-column="45" selection-end-line="44" selection-end-column="45" />
          <folding>
            <element signature="e#182#204#0" expanded="true" />
            <element signature="e#301#328#0" expanded="true" />
          </folding>
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/ogl-renderer/SceneTree.hpp">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="364">
          <caret line="26" column="16" selection-start-line="26" selection-start-column="16" selection-end-line="26" selection-end-column="16" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/ogl-renderer/Thing.cpp">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="392">
          <caret line="28" column="20" selection-start-line="28" selection-start-column="20" selection-end-line="28" selection-end-column="20" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/ogl-renderer/Thing.hpp">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="364">
          <caret line="26" column="4" selection-start-line="26" selection-start-column="4" selection-end-line="26" selection-end-column="4" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/ogl-renderer/SceneTree.cpp">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="112">
          <caret line="8" column="49" selection-start-line="8" selection-start-column="49" selection-end-line="8" selection-end-column="49" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/ogl-renderer/HeightmapMesh.hpp">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="336">
          <caret line="24" column="4" selection-start-line="24" selection-start-column="4" selection-end-line="24" selection-end-column="4" />
          <folding>
            <element signature="e#121#141#0" expanded="true" />
          </folding>
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/ogl-renderer/Shader.hpp">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="280">
          <caret line="20" selection-start-line="20" selection-end-line="20" />
          <folding>
            <element signature="e#100#122#0" expanded="true" />
          </folding>
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/CMakeLists.txt">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="840">
          <caret line="60" column="32" selection-start-line="60" selection-start-column="32" selection-end-line="60" selection-end-column="32" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/ogl-renderer/HeightmapMesh.cpp">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="238">
          <caret line="17" lean-forward="true" selection-start-line="17" selection-end-line="17" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/ogl-renderer/TriangleMesh.hpp">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="308">
          <caret line="46" column="44" lean-forward="true" selection-start-line="46" selection-start-column="44" selection-end-line="46" selection-end-column="44" />
          <folding>
            <element signature="e#205#227#0" expanded="true" />
            <element signature="e#324#345#0" expanded="true" />
          </folding>
        </state>
      </provider>
    </entry>
  </component>
</project>